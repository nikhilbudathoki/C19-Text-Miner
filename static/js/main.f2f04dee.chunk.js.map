{"version":3,"sources":["Paper/Paper.js","App.js","registerServiceWorker.js","index.js"],"names":["PaperComponent","props","paper","doc_id","relevant_section","state","excerptName","excerptFrags","excerptFragWindow","start","end","startCreep","endCreep","noExcerpt","scibert_summary","_makeExcerptHighlightedTemplate","frags","window","setExcerpt","bind","onBefore","onAfter","this","journal","title","doi","authors","design","text_body","abstract","risk_factors","publish_time","link","className","Date","toUTCString","showButtons","target","href","name","type","checked","onChange","onClick","renderExcerpt","filter","_","idx","setState","Math","max","min","length","stringArr","data-toggle","map","str","key","excerpt","split","sentence","console","error","match_indices","makeHighlightedFragments","snippet","sort","a","b","ws","i","matchIdx","push","makeSentenceFragments","slice","lastIndex","match","exec","kw","frag","_makeSentenceFragments","_frag","sents","sent","arr","log","Component","App","loadMoreHandler","winSize","enriched_data","papers","cleanPapers","unclean","cleaned","filtered","winStart","filterByRiskFactor","_factors","prop","factor","Set","f","data","setIds","sortPapers","cleanRiskFactors","cleanDesigns","forEach","p","id","sortBy","p1","p2","riskFactors","handleStringRiskFactors","Array","isArray","makeFlatUnique","stemmedRiskFactor","trim","add","d","flat","replace","JSON","parse","value","getRiskFactorOptions","undefined","factorLabel","toUpperCase","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f2f04dee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Paper.css';\n\nconst handleForce = (data, fileInfo) => console.log(data, fileInfo);\n\n\n/** Paper DTO\ninterface PaperDTO {\n\t// metadata\n\tdoc_id: string;\n\tjournal: string; // journal title\n\ttitle: string; // paper title\n\tauthors: string; // paper authors\n\tdoi: string; // digital object identifier\n\tpublish_time: string;\n\trisk_factors: string // stringified array of risk factors\n\tdesign: string // design of the research experiment\n\n\t// data\n\tmatch_indices: string; indices that any keywords start at to be higlighted\n\ttext_body: string; // relevant snippet\n\tabstract: string; // paper abstract\n\tscibert_summary: string; // paper summary\n\n\ttransmission_indicator: boolean;\n\tsmoke_indicator: boolean;\n\t// Unnamed: 0\n\t// Unnamed: 0.1\n\t// H index\n}\n*/\n\nconst riskFactorColors = {\n\thypertension: '',\n\tcancer: '',\n\tdiabetes: '',\n\t'pulmonary disease': '',\n\tpregnancy: '',\n\tcopd: '',\n\t'race/ethnicity': '',\n\ttuberculosis: '',\n\tneonates: '',\n\t'liver disease': '',\n\t'smoking': '',\n}\n\n/**\n * Receives prop with paper DTO.\n */\nclass PaperComponent extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tif (props.paper.doc_id === \"5dc4268a42adf3d5c55c87b7f6518de600b057c5\") {\n\t\t\tprops.paper.relevant_section = `Breastfeeding is not contraindicated, based on current published guidelines – a\n\t\t\tretrospective analysis of COVID-19 in pregnancy showed that none of the women had\n\t\t\tdetectable viral loads of SARS-CoV-2 in breastmilk. Regardless, if the patient chooses to\n\t\t\tbreastfeed, a face mask should be worn due to the close proximity between mother and child\n\t\t\tto reduce the risk of droplet transmission. The presence of coronavirus antibodies in\n\t\t\tbreastmilk depends on the gestation at which maternal infection occurred and if there was\n\t\t\tany preceding use of high-dose corticosteroids which could suppress maternal antibody\n\t\t\tresponses`;\n\t\t}\n\n\t\tthis.state = {\n\t\t\tpaper: props.paper,\n\t\t\texcerptName: 'relevant_section',\n\t\t\texcerptFrags: null,\n\t\t\texcerptFragWindow: {start: null, end: null, startCreep: 1, endCreep: 1},\n\t\t\tnoExcerpt: false\n\t\t};\n\t\tthis.state.paper.scibert_summary = this.state.paper.scibert_summary || 'Not Extracted Yet';\n\n\t\tconst [frags, window] = this._makeExcerptHighlightedTemplate()\n\t\tthis.state.excerptFrags = frags;\n\t\tthis.state.excerptFragWindow = {...this.state.excerptFragWindow, ...window};\n\n\n\t\tthis.setExcerpt = this.setExcerpt.bind(this);\n\t\tthis.onBefore = this.onBefore.bind(this);\n\t\tthis.onAfter = this.onAfter.bind(this);\n\t}\n\n\n\t// todo: skip splitting when abstract is retrieved as string[] directly\n\trender() {\n\n\t\tlet {\n\t\t\tdoc_id, journal, title, authors, doi,\n\t\t\ttext_body, abstract, design, risk_factors,\n\t\t\tpublish_time,\n\t\t} = this.state.paper;\n\n\t\tconst excerptName = this.state.excerptName;\n\t\t// const scibert_summary_sentences = scibert_summary.split(/(?<=\\.\\s+)/);\n\t\tconst link = `http://doi.org/${doi}`;\n\t\treturn (\n\t\t\t<div className=\"paper-container\">\n\t\t\t\t<div className=\"paper-metadata\">\n\t\t\t\t\t<h4>Title:</h4> <span>{title}</span>\n\t\t\t\t\t<h4>Journal:</h4> <span>{journal}</span>\n\t\t\t\t\t<h4>Publication Date:</h4> <span>{(new Date(publish_time)).toUTCString()}</span>\n\n\t\t\t\t\t{/* <h4>Authors:</h4> <span>{authors}</span> */}\n\t\t\t\t\t<h4>Doi:</h4> <span>{doi}</span>\n\t\t\t\t\t<h4>Design:</h4> <span className=\"title-case\">{this.showButtons(design)}</span>\n\t\t\t\t\t<h4>Relevant Risk Factors</h4> {this.showButtons(risk_factors)}\n\t\t\t\t\t<h4><a target=\"_blank\" href={link}>Reference</a></h4> <span></span>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"paper-data\">\n\t\t\t\t\t<div className=\"paper-summary\">\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t<label><span className={excerptName === 'relevant_section' ? 'active' : ''}>Relevant Snippet</span> <input name={`${doc_id}-excerpt`} type=\"radio\" checked={excerptName === 'relevant_section'} onChange={this.setExcerpt.bind(this,'relevant_section')}/></label>\n\t\t\t\t\t\t\t<label><span className={excerptName === 'scibert_summary' ? 'active' : ''}>Extracted Summary</span> <input name={`${doc_id}-excerpt`} type=\"radio\" checked={excerptName === 'scibert_summary'} onChange={this.setExcerpt.bind(this,'scibert_summary')}/></label>\n\t\t\t\t\t\t</h4>\n\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<button onClick={this.onBefore}>More</button>\n\t\t\t\t\t\t\t<p>{this.renderExcerpt()}</p>\n\t\t\t\t\t\t\t<button onClick={this.onAfter}>More</button>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderExcerpt() {\n\t\treturn this.state.noExcerpt\n\t\t\t?\t(<span>Not Extracted Yet</span>)\n\t\t\t: this.state.excerptFrags.filter((_, idx) => idx >= this.state.excerptFragWindow.start && idx <= this.state.excerptFragWindow.end);\n\t}\n\n\tonBefore() {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\texcerptFragWindow: {\n\t\t\t\t...this.state.excerptFragWindow,\n\t\t\t\tstart: Math.max(this.state.excerptFragWindow.start - this.state.excerptFragWindow.startCreep, 0),\n\t\t\t\tstartCreep: this.state.excerptFragWindow.startCreep * 2\n\t\t\t}\n\t\t})\n\t}\n\n\tonAfter() {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\texcerptFragWindow: {\n\t\t\t\t...this.state.excerptFragWindow,\n\t\t\t\tend: Math.min(this.state.excerptFragWindow.end + this.state.excerptFragWindow.endCreep, this.state.excerptFrags.length - 1),\n\t\t\t\tendCreep: this.state.excerptFragWindow.endCreep * 2\n\t\t\t}\n\t\t})\n\n\t}\n\n\tshowButtons(stringArr) {\n\t\treturn (\n\t\t\t<div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n\t\t\t\t{stringArr.map(str => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tkey={str}\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary active title-case\">\n\t\t\t\t\t\t\t{str}\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked onChange={() => {}} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t</div>\n\t\t)\n\n\t}\n\n\tmakeExcerptTemplate(excerptName) {\n\t\tconst excerpt = this.state.paper[excerptName];\n\t\tif (!excerpt) {\n\t\t\tconsole.error('no excerpt')\n\t\t\treturn;\n\t\t}\n\n\t\tconst sentences = excerpt.split(/(?<=\\.\\s+)/);\n\t\treturn sentences.map((sentence, idx) => (<span key={idx} className=\"sentence\">{sentence}</span>));\n\n\t}\n\n\t_makeExcerptHighlightedTemplate(excerptName = this.state.excerptName) {\n\t\tlet excerpt, match_indices;\n\t\tif (excerptName === 'relevant_section') {\n\t\t\texcerpt = this.state.paper.text_body;\n\t\t\tmatch_indices = this.state.paper.match_indices\n\t\t} else if (excerptName === 'scibert_summary') {\n\t\t\t//return null;\n\t\t\t// This part of the code resolves match indices to only rernder\n\t\t\t// a part of the extracted summary.\n\t\t\texcerpt = ' ' + this.state.paper.scibert_summary;\n\t\t\tmatch_indices = [0, (excerpt.length-3)/3];\n\t\t}\n\n\n\t\treturn this.makeHighlightedFragments(match_indices, excerpt);\n\t}\n\n\t// last index tracked only for global matches (if not global, regexp is basically stateless)\n\t// (\\w)*\\s will capture only single characters but (\\w*) will capture the whole word\n\t//\n\n\tmakeHighlightedFragments(match_indices, snippet) {\n\t\tmatch_indices.sort((a,b) => a - b)\n\t\tconst ws = /(.*?)\\W/g\n\t\tconst frags = []\n\t\tconst window = {start: null, end: null}\n\t\tfor (let i = 0; i < match_indices.length; ++i) {\n\t\t\tconst matchIdx = match_indices[i]\n\t\t\tfrags.push(... this.makeSentenceFragments(snippet.slice(ws.lastIndex, matchIdx), i))\n\t\t\tws.lastIndex = matchIdx;\n\t\t\tconst match = ws.exec(snippet)\n\t\t\tif (match) {\n\t\t\t\tconst [,kw] = match;\n\t\t\t\tfrags.push((<span key={matchIdx} className=\"fragment keyword\">{kw}</span>));\n\t\t\t\tif (i === 0) {\n\t\t\t\t\twindow.start = frags.length - 2;\n\t\t\t\t}\n\t\t\t\tif (i === match_indices.length - 1) {\n\t\t\t\t\twindow.end = frags.length;\n\t\t\t\t}\n\t\t\t\tws.lastIndex--;\n\t\t\t} else {\n\t\t\t\tdebugger;\n\t\t\t\tws.lastIndex = matchIdx\n\t\t\t}\n\t\t}\n\t\tfrags.push(...this.makeSentenceFragments(snippet.slice(ws.lastIndex),match_indices.length))\n\t\treturn [frags, window];\n\t}\n\n\tmakeSentenceFragments(frag, matchIdx) {\n\t\tconst _frags = this._makeSentenceFragments(frag);\n\t\tconst frags = _frags.map((_frag, idx) => (<span key={_frag + idx + matchIdx} className=\"fragment\">{_frag}</span>))\n\t\treturn frags;\n\t}\n\n\t_makeSentenceFragments(frag) {\n\t\tconst sents = []\n\t\tconst ws = /(.*?)\\s/g\n\t\tlet i = 0\n\t\tlet end = 0;\n\t\tfor(; i < frag.length; i = end) {\n\t\t\tend = i + 100;\n\t\t\tws.lastIndex = end;\n\t\t\tconst _args = ws.exec(frag)\n\t\t\tif (ws.lastIndex > end) {\n\t\t\t\tend = ws.lastIndex-1\n\t\t\t}\n\t\t\tconst sent = frag.slice(i, end)\n\t\t\tsents.push(sent)\n\t\t}\n\t\treturn sents;\n\t}\n\n\tsetExcerpt(excerptName) {\n\t\tif (this.state.excerptName !== excerptName) {\n\t\t\tconst arr = this._makeExcerptHighlightedTemplate(excerptName)\n\t\t\tconsole.log(arr);\n\t\t\tif (arr) {\n\t\t\t\tconst [frags, window] = arr\n\t\t\t\tthis.setState({\n\t\t\t\t\t...this.state,\n\t\t\t\t\texcerptFrags: frags,\n\t\t\t\t\texcerptFragWindow: {...this.state.excerptFragWindow, ...window},\n\t\t\t\t\texcerptName,\n\t\t\t\t\tnoExcerpt: false,\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({noExcerpt: true, excerptName})\n\t\t\t}\n\t\t}\n\t}\n\n};\n\nexport default PaperComponent;\n","import React, { Component } from 'react';\nimport './App.css';\nimport PaperComponent from './Paper/Paper.js';\n// import data from './datas/risk_covid_join.json'\n// import diabete_data from \"./datas/diabete.json\";\n// import tuberclosis_data from \"./datas/tuberclosis.json\";\n// import pregnan_data from \"./datas/pregnan.json\";\n// import smoke_data from \"./datas/smoke.json\";\nimport enriched_data from \"./datas/enriched_covid_df.json\";\n// import enriched_data from \"./datas/enriched_covid_df224.json\";\n\n// const rankedRiskFactors = {\n// \tpregnancy: pregnan_data,\n// \tsmoking: smoke_data,\n// \tdiabetes: diabete_data,\n// \ttuberculosis: tuberclosis_data,\n// }\n\n// const riskFactors = [\n// \t\"pregnancy\", \"smoking\", \"diabetes\", 'tuberculosis',\n// \t\"hypertension\", \"race\", \"heart disease\", \"nursing home\",\n// \t\"cancer\", \"immigration\", \"elderly\", \"education\",\n// \t\"insurance\", \"neonates\", \"income\",\n// \t\"ethnicity\", \"housing\", \"health workers\", \"hospital staff\", \"staff\"\n// ];\n\nfunction unstemRiskFactor(stemmedRiskFactor) {\n\tif (stemmedRiskFactor === 'pregnan') return 'pregnancy';\n\telse if (stemmedRiskFactor === 'smok' || stemmedRiskFactor === 'lung' || stemmedRiskFactor === 'immun') return 'smoking';\n\telse if (stemmedRiskFactor === 'tubercul' || stemmedRiskFactor === 'tb' || stemmedRiskFactor === 'sputum') return 'tuberculosis';\n\telse if (stemmedRiskFactor === 'diabete') return 'diabetes';\n\telse if (stemmedRiskFactor === 'comorbidit') return 'comorbidity';\n\telse if (stemmedRiskFactor === 'hyperten') return 'hypertension';\n\treturn stemmedRiskFactor;\n}\n\nfunction unstemDesign(stemmedDesign) {\n\treturn stemmedDesign;\n}\n\nclass App extends Component {\n\triskFactors;\n\n\n\tconstructor() {\n\t\tsuper();\n\t\t// const factors = this.getPaperRiskFactors(enriched_data[0])\n\t\t// console.log('factors', factors);\n\n\t\tconsole.log('unclean', enriched_data);\n\t\tconst papers = this.cleanPapers(enriched_data);\n\t\tconsole.log('clean', papers);\n\n\t\tthis.state = {\n\t\t\tunclean: enriched_data, // raw data\n\t\t\tcleaned: papers, // raw data cleaned - normalized fields (unique/flat lists, string -> array etc)\n\t\t\tfiltered: papers, // cleaned data filtered by filters (risk factor)\n\t\t\twinStart: 0, // paginated window of filtered papers to show\n\t\t\twinSize: 1,\n\t\t}\n\n\t\tthis.filterByRiskFactor = this.filterByRiskFactor.bind(this);\n\t}\n\n\tgetPaperRiskFactors(paper) {\n\t\tlet _factors = []\n\t\tfor (const prop in paper) {\n\t\t\tconst match = prop.match(/has_(.*)\\?/)\n\t\t\tif (match) {\n\t\t\t\tconst [,factor] = match;\n\t\t\t\t_factors.push(factor);\n\t\t\t}\n\t\t}\n\t\t_factors = [...new Set(_factors)];\n\t\tconst factors = _factors.filter(f => paper[`has_${f}?`])\n\t\treturn factors;\n\t}\n\n\tcleanPapers(data) {\n\t\tthis.setIds(data);\n\t\tthis.sortPapers(data)\n\t\tthis.cleanRiskFactors(data);\n\t\tthis.cleanDesigns(data)\n\t\treturn data;\n\t}\n\n\tsetIds(papers) {\n\t\tpapers.forEach((p, idx) => p.id = idx)\n\t}\n\n\tsortPapers(papers, sortBy = 'max_rank') {\n\t\treturn papers.sort((p1, p2) => {\n\t\t\treturn (p2[sortBy] || 0) - (p1[sortBy] || 0);\n\t\t})\n\t}\n\n\tcleanRiskFactors(papers) {\n\t\tthis.riskFactors = new Set();\n\t\tpapers.forEach(p => {\n\t\t\tif (typeof p.risk_factors === 'string') {\n\t\t\t\tp.risk_factors = this.handleStringRiskFactors(p.risk_factors);\n\t\t\t}\n\t\t\tif (!Array.isArray(p.risk_factors)) {\n\t\t\t\tconsole.error('risk_factor column must be array of strings!', p.risk_factors);\n\t\t\t}\n\t\t\tp.risk_factors = this.makeFlatUnique(p.risk_factors);\n\t\t\tp.risk_factors = p.risk_factors.map(f => unstemRiskFactor(f.trim()));\n\t\t\tp.risk_factors.forEach(f => this.riskFactors.add(f));\n\t\t});\n\t}\n\n\tcleanDesigns(papers) {\n\t\tpapers.forEach(p => {\n\t\t\tp.design = this.makeFlatUnique(p.design).map(d =>unstemDesign(d));\n\t\t})\n\t}\n\n\tmakeFlatUnique(arr) {\n\t\treturn [...new Set(arr.flat())]\n\t}\n\n\thandleStringRiskFactors(risk_factors) {\n\t\t// use double quotes\n\t\trisk_factors = risk_factors.replace(/'/g, '\"');\n\t\t// remove duplicates\n\t\trisk_factors = JSON.parse(risk_factors);\n\t\treturn risk_factors\n\t}\n\n\trender() {\n\t\tconst papers = this.state.filtered.slice(this.state.winStart, this.state.winStart + this.state.winSize);\n\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<header>\n\t\t\t\t\t<div className=\"app-header\">\n\t\t\t\t\t\t<h1>What do we know about COVID-19 risk factors? What have we learned from epidemiological studies?</h1>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"searchbar\">\n\t\t\t\t\t\t<h4>Filters:</h4>\n\t\t\t\t\t\t<div className=\"filters\">\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tRisk Factor:\n\t\t\t\t\t\t\t\t<select onChange={this.filterByRiskFactor}>\n\t\t\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t\t\t{this.getRiskFactorOptions()}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</header>\n\n\t\t\t\t<div>\n\t\t\t\t\t{papers.map(paper => {\n\t\t\t\t\t\treturn (<PaperComponent key={paper.id} paper={paper}/>);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<button onClick={this.loadMoreHandler}>Load More</button>\n\t\t\t\t<p>{this.state.winSize}</p>\n\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfilterByRiskFactor({target}) {\n\t\tdebugger;\n\t\tconst factor = target.value;\n\t\tconst filtered = factor\n\t\t\t? this.state.cleaned.filter(p => p[`has_${factor}?`])\n\t\t\t: this.state.cleaned\n\t\tconst sortBy = factor ? `${factor}_rank` : undefined\n\t\tthis.sortPapers(filtered, sortBy)\n\t\tthis.setState({\n\t\t\tfiltered,\n\t\t\twinSize: 10\n\t\t})\n\t}\n\n\tgetRiskFactorOptions() {\n\t\treturn [...this.riskFactors].map(f => {\n\t\t\tconst factorLabel = f[0].toUpperCase() + f.slice(1);\n\t\t\treturn (\n\t\t\t\t<option\n\t\t\t\t  key={f}\n\t\t\t\t\tvalue={f}\n\t\t\t\t\tclassName=\"title-case\">\n\t\t\t\t\t{factorLabel}\n\t\t\t\t</option>\n\t\t\t)\n\t\t})\n\t}\n\n\tloadMoreHandler = () => {\n\t\tthis.setState({\n\t\t\twinSize: this.state.winSize + 10\n\t\t})\n\t}\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}